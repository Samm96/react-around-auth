{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  } // used to get the server response\n\n\n  _handleServerResponse(res) {\n    return res.ok ? res.json() : Promise.reject(`Error: ${res.status}`);\n  }\n\n  getAppInfo() {\n    return Promise.all([this.getUserInfo(), this.getInitialCardList()]);\n  } //used to request user info\n\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(this._handleServerResponse);\n  } //used to insert user info\n\n\n  setUserInfo(_ref2) {\n    let {\n      name,\n      about\n    } = _ref2;\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(this._handleServerResponse);\n  } // used to insert profile pic\n\n\n  updateProfilePicture(_ref3) {\n    let {\n      avatar\n    } = _ref3;\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(this._handleServerResponse);\n  } // used to get initial cards from server\n\n\n  getInitialCardList() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(this._handleServerResponse);\n  } // used to add cards to page\n\n\n  addCard(_ref4) {\n    let {\n      name,\n      link\n    } = _ref4;\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(this._handleServerResponse);\n  } // removes cards\n\n\n  removeCard(_ref5) {\n    let {\n      _id\n    } = _ref5;\n    return fetch(`${this._baseUrl}/cards/${_id}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(this._handleServerResponse);\n  }\n\n  toggleLikeCardStatus(cardId, like) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: like ? \"PUT\" : \"DELETE\",\n      headers: this._headers\n    }).then(this._handleServerResponse);\n  }\n\n}\n\nexport const api = new Api({\n  baseUrl: \"https://around.nomoreparties.co/v1/group-12\",\n  headers: {\n    authorization: \"9b991f86-368d-4ef3-963c-b91580821c46\",\n    \"Content-Type\": \"application/json\"\n  }\n});","map":{"version":3,"sources":["/Users/samanthahorsch/Desktop/BOOTCAMP - PRACTICUM - CODING/Projects/Sprint 10 Around The U.S. React/around-react/src/utils/Api.js"],"names":["Api","constructor","baseUrl","headers","_baseUrl","_headers","_handleServerResponse","res","ok","json","Promise","reject","status","getAppInfo","all","getUserInfo","getInitialCardList","fetch","then","setUserInfo","name","about","method","body","JSON","stringify","updateProfilePicture","avatar","addCard","link","removeCard","_id","toggleLikeCardStatus","cardId","like","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  // used to get the server response\n  _handleServerResponse(res) {\n    return res.ok ? res.json() : Promise.reject(`Error: ${res.status}`);\n  }\n\n  getAppInfo() {\n    return Promise.all([this.getUserInfo(), this.getInitialCardList()]);\n  }\n\n  //used to request user info\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n    }).then(this._handleServerResponse);\n  }\n\n  //used to insert user info\n  setUserInfo({ name, about }) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about,\n      }),\n    }).then(this._handleServerResponse);\n  }\n\n  // used to insert profile pic\n  updateProfilePicture({ avatar }) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar,\n      }),\n    }).then(this._handleServerResponse);\n  }\n\n  // used to get initial cards from server\n  getInitialCardList() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n    }).then(this._handleServerResponse);\n  }\n\n  // used to add cards to page\n  addCard({ name, link }) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link,\n      }),\n    }).then(this._handleServerResponse);\n  }\n\n  // removes cards\n  removeCard({ _id }) {\n    return fetch(`${this._baseUrl}/cards/${_id}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._handleServerResponse);\n  }\n\n  toggleLikeCardStatus(cardId, like) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: like ? \"PUT\" : \"DELETE\",\n      headers: this._headers,\n    }).then(this._handleServerResponse);\n  }\n}\n\nexport const api = new Api({\n  baseUrl: \"https://around.nomoreparties.co/v1/group-12\",\n  headers: {\n    authorization: \"9b991f86-368d-4ef3-963c-b91580821c46\",\n    \"Content-Type\": \"application/json\",\n  }\n});\n\n"]},"metadata":{},"sourceType":"module"}